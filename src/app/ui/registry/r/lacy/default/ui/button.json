{
  "name": "button",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "devDependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "ui/button.tsx",
      "content": "/*\n * This file was generated by ShipKit.\n * Learn more at https://shipkit.io\n */\n\n/**\n * @description A versatile button component with multiple variants and sizes\n * @author ShipKit Team\n * @version 1.0.0\n * @status stable\n * @since 1.0.0\n * @license MIT\n *\n * @example Basic Usage\n * ```tsx\n * <Button>Click me</Button>\n * ```\n *\n * @example Variants\n * ```tsx\n * <div className=\"flex gap-4\">\n *   <Button variant=\"primary\">Primary</Button>\n *   <Button variant=\"secondary\">Secondary</Button>\n *   <Button variant=\"outline\">Outline</Button>\n * </div>\n * ```\n *\n * @example Sizes\n * ```tsx\n * <div className=\"flex items-center gap-4\">\n *   <Button size=\"sm\">Small</Button>\n *   <Button size=\"md\">Medium</Button>\n *   <Button size=\"lg\">Large</Button>\n * </div>\n * ```\n */\n\n\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nconst buttonVariants = cva(\n\t\"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none ring-offset-background\",\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tprimary: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n\t\t\t\tsecondary: \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n\t\t\t\toutline: \"border border-input hover:bg-accent hover:text-accent-foreground\",\n\t\t\t\tghost: \"hover:bg-accent hover:text-accent-foreground\",\n\t\t\t\tlink: \"underline-offset-4 hover:underline text-primary\",\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tsm: \"h-9 px-3 rounded-md\",\n\t\t\t\tmd: \"h-10 py-2 px-4 rounded-md\",\n\t\t\t\tlg: \"h-11 px-8 rounded-md\",\n\t\t\t\ticon: \"h-10 w-10\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: \"primary\",\n\t\t\tsize: \"md\",\n\t\t},\n\t}\n);\n\n/**\n * Button component props\n */\nexport interface ButtonProps\n\textends React.ButtonHTMLAttributes<HTMLButtonElement>,\n\tVariantProps<typeof buttonVariants> {\n\t/**\n\t * Whether to render the button as a child component\n\t * @default false\n\t */\n\tasChild?: boolean;\n\t/**\n\t * The visual style variant of the button\n\t * @default \"primary\"\n\t */\n\tvariant?: \"primary\" | \"secondary\" | \"outline\" | \"ghost\" | \"link\";\n\t/**\n\t * The size of the button\n\t * @default \"md\"\n\t */\n\tsize?: \"sm\" | \"md\" | \"lg\" | \"icon\";\n}\n\n/**\n * A versatile button component with multiple variants and sizes\n */\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n\t({ className, variant, size, asChild = false, ...props }, ref) => {\n\t\tconst Comp = asChild ? Slot : \"button\";\n\t\treturn (\n\t\t\t<Comp\n\t\t\t\tclassName={cn(buttonVariants({ variant, size, className }), \"bg-primary text-primary-foreground hover:bg-primary/90\")}\n\t\t\t\tref={ref}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t);\n\t}\n);\n\nButton.displayName = \"Button\";\n\nexport { Button, buttonVariants };\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "library": "lacy",
    "theme": "default",
    "hasPreview": true
  }
}