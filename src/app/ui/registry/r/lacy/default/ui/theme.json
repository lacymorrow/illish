{
  "name": "theme",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-icons",
    "next-themes"
  ],
  "devDependencies": [],
  "registryDependencies": [
    "button",
    "dropdown-menu"
  ],
  "files": [
    {
      "path": "ui/theme.tsx",
      "content": "/*\n * This file was generated by ShipKit.\n * Learn more at https://shipkit.io\n */\n\n/**\n * @description A theme provider and theme toggle components for light/dark mode\n * @category Theme\n * @status stable\n * @version 1.0.0\n *\n * @example\n * <ThemeProvider>\n *   <ThemeToggle />\n *   // or\n *   <ThemeChooser />\n * </ThemeProvider>\n *\n * @props {object} ThemeProvider.props\n * - attribute=\"class\" - HTML attribute to apply theme\n * - defaultTheme=\"system\" - Default theme\n * - enableSystem=true - Enable system theme detection\n * - disableTransitionOnChange=false - Disable transitions when changing theme\n *\n * @props {object} ThemeToggle.props\n * - variant=\"ghost\" - Button variant\n * - size=\"icon\" - Button size\n *\n * @props {object} ThemeChooser.props\n * - variant=\"ghost\" - Button variant\n * - size=\"icon\" - Button size\n *\n * @see https://ui.shadcn.com/docs/dark-mode\n * @see https://github.com/pacocoursey/next-themes\n */\n\n\"use client\";\nimport { ThemeProvider, useTheme } from \"next-themes\";\nimport React from \"react\";\n\nimport { Button, type ButtonProps } from \"@/components/ui/button\";\nimport {\n\tDropdownMenu,\n\tDropdownMenuContent,\n\tDropdownMenuItem,\n\tDropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { MoonIcon, SunIcon } from \"@radix-ui/react-icons\";\n\nconst ThemeButton = React.forwardRef<HTMLButtonElement, ButtonProps>(\n\t(props, ref) => (\n\t\t<Button variant=\"ghost\" size=\"icon\" {...props} ref={ref}>\n\t\t\t<SunIcon className=\"size-5 rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n\t\t\t<MoonIcon className=\"absolute size-5 rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n\t\t\t<span className=\"sr-only\">Toggle theme</span>\n\t\t</Button>\n\t),\n);\nThemeButton.displayName = \"ThemeButton\";\n\nconst ThemeToggle = React.forwardRef<HTMLButtonElement, ButtonProps>(\n\t(props, ref) => {\n\t\tconst { theme, setTheme } = useTheme();\n\n\t\treturn (\n\t\t\t<ThemeButton\n\t\t\t\tonClick={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\n\t\t\t\t{...props}\n\t\t\t\tref={ref}\n\t\t\t/>\n\t\t);\n\t},\n);\nThemeToggle.displayName = \"ThemeToggle\";\n\nconst ThemeChooser = React.forwardRef<HTMLButtonElement, ButtonProps>(\n\t(props, ref) => {\n\t\tconst { setTheme } = useTheme();\n\n\t\treturn (\n\t\t\t<DropdownMenu>\n\t\t\t\t<DropdownMenuTrigger asChild>\n\t\t\t\t\t<ThemeButton {...props} ref={ref} />\n\t\t\t\t</DropdownMenuTrigger>\n\t\t\t\t<DropdownMenuContent align=\"end\">\n\t\t\t\t\t<DropdownMenuItem onClick={() => setTheme(\"light\")}>\n\t\t\t\t\t\tLight\n\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t<DropdownMenuItem onClick={() => setTheme(\"dark\")}>\n\t\t\t\t\t\tDark\n\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t<DropdownMenuItem onClick={() => setTheme(\"system\")}>\n\t\t\t\t\t\tSystem\n\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t</DropdownMenuContent>\n\t\t\t</DropdownMenu>\n\t\t);\n\t},\n);\nThemeChooser.displayName = \"ThemeChooser\";\n\nexport { ThemeChooser, ThemeProvider, ThemeToggle };\n",
      "type": "registry:ui"
    }
  ],
  "meta": {
    "library": "lacy",
    "theme": "default"
  }
}