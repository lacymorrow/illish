{
  "name": "team-switcher",
  "type": "registry:block",
  "dependencies": [
    "@radix-ui/react-icons",
    "lucide-react",
    "next",
    "next-auth"
  ],
  "devDependencies": [],
  "registryDependencies": [
    "avatar",
    "button",
    "command",
    "dialog",
    "input",
    "label",
    "popover",
    "sidebar",
    "use-toast"
  ],
  "files": [
    {
      "path": "blocks/team-switcher.tsx",
      "content": "/*\n * This file was generated by ShipKit.\n * Learn more at https://shipkit.io\n */\n\n\"use client\";\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n\tCommand,\n\tCommandEmpty,\n\tCommandGroup,\n\tCommandInput,\n\tCommandItem,\n\tCommandList,\n\tCommandSeparator,\n} from \"@/components/ui/command\";\nimport {\n\tDialog,\n\tDialogContent,\n\tDialogDescription,\n\tDialogFooter,\n\tDialogHeader,\n\tDialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport {\n\tPopover,\n\tPopoverContent,\n\tPopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { useSidebar } from \"@/components/ui/sidebar\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { cn } from \"@/lib/utils\";\nimport { createTeam, getUserTeams } from \"@/server/actions/teams\";\nimport { CaretSortIcon, CheckIcon } from \"@radix-ui/react-icons\";\nimport { PlusIcon } from \"lucide-react\";\nimport { useSession } from \"next-auth/react\";\nimport { useRouter } from \"next/navigation\";\nimport * as React from \"react\";\n\nconst getAvatarUrl = (name: string, type: \"personal\" | \"workspace\" = \"workspace\") => {\n\t// Create a consistent hash for the team name\n\tconst hash = name.split(\"\").reduce((acc, char) => {\n\t\treturn char.charCodeAt(0) + ((acc << 5) - acc);\n\t}, 0);\n\n\t// Use different styles for personal vs workspace teams\n\t// @see https://www.dicebear.com/styles/\n\tconst style = type === \"personal\" ? \"glass\" : \"pixel-art\";\n\n\t// Generate a color based on the hash\n\tconst colors = [\"2ecc71\", \"3498db\", \"9b59b6\", \"f1c40f\", \"e74c3c\", \"1abc9c\", \"34495e\"];\n\tconst color = colors[Math.abs(hash) % colors.length];\n\n\treturn `https://api.dicebear.com/9.x/${style}/svg?seed=${encodeURIComponent(name)}&backgroundColor=${color}`;\n};\n\nexport function TeamSwitcher() {\n\tconst { open: sidebarOpen } = useSidebar();\n\tconst { data: session } = useSession();\n\tconst router = useRouter();\n\tconst { toast } = useToast();\n\tconst [teams, setTeams] = React.useState<\n\t\tAwaited<ReturnType<typeof getUserTeams>>\n\t>([]);\n\tconst [activeTeam, setActiveTeam] = React.useState<(typeof teams)[0]>();\n\tconst [open, setOpen] = React.useState(false);\n\tconst [showNewTeamDialog, setShowNewTeamDialog] = React.useState(false);\n\tconst [newTeamName, setNewTeamName] = React.useState(\"\");\n\tconst [isLoading, setIsLoading] = React.useState(false);\n\n\tReact.useEffect(() => {\n\t\tif (session?.user?.id) {\n\t\t\tgetUserTeams(session.user.id).then((fetchedTeams) => {\n\t\t\t\tsetTeams(fetchedTeams);\n\t\t\t\tconst personalTeam = fetchedTeams.find(\n\t\t\t\t\t(t) => t.team.type === \"personal\",\n\t\t\t\t);\n\t\t\t\tif (personalTeam) {\n\t\t\t\t\tsetActiveTeam(personalTeam);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}, [session?.user?.id]);\n\n\tconst handleCreateTeam = async () => {\n\t\tif (!session?.user?.id) return;\n\t\tsetIsLoading(true);\n\t\ttry {\n\t\t\tconst team = await createTeam(session.user.id, newTeamName);\n\t\t\tsetTeams((prev) => [...prev, { team, role: \"owner\" as const }]);\n\t\t\tsetActiveTeam({ team, role: \"owner\" as const });\n\t\t\tsetShowNewTeamDialog(false);\n\t\t\tsetNewTeamName(\"\");\n\t\t\trouter.refresh();\n\t\t\ttoast({\n\t\t\t\ttitle: \"Team created\",\n\t\t\t\tdescription: `Successfully created team \"${newTeamName}\"`,\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.error(\"Failed to create team:\", error);\n\t\t\ttoast({\n\t\t\t\ttitle: \"Error\",\n\t\t\t\tdescription: \"Failed to create team\",\n\t\t\t\tvariant: \"destructive\",\n\t\t\t});\n\t\t} finally {\n\t\t\tsetIsLoading(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Popover open={open} onOpenChange={setOpen}>\n\t\t\t\t<PopoverTrigger asChild>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"ghost\"\n\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\tclassName={cn(\"flex w-full items-center gap-2\", sidebarOpen && \"justify-between py-6\")}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Avatar className=\"h-6 w-6\">\n\t\t\t\t\t\t\t<AvatarImage\n\t\t\t\t\t\t\t\tsrc={activeTeam?.team ? getAvatarUrl(activeTeam.team.name, activeTeam.team.type) : getAvatarUrl(\"team\")}\n\t\t\t\t\t\t\t\talt={activeTeam?.team?.name || \"Team\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<AvatarFallback>\n\t\t\t\t\t\t\t\t{activeTeam?.team?.name?.charAt(0) || \"T\"}\n\t\t\t\t\t\t\t</AvatarFallback>\n\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t{sidebarOpen && <>\n\t\t\t\t\t\t\t<div className=\"grid flex-1 text-left text-sm leading-tight\">\n\t\t\t\t\t\t\t\t<span className=\"truncate font-semibold\">\n\t\t\t\t\t\t\t\t\t{activeTeam?.team?.name || \"Select Team\"}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t<span className=\"truncate text-xs capitalize text-muted-foreground\">\n\t\t\t\t\t\t\t\t\t{activeTeam?.role || \"No team selected\"}\n\t\t\t\t\t\t\t\t\t{activeTeam?.team?.type === \"personal\" && \" (Personal)\"}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<CaretSortIcon className=\"h-4 w-4 shrink-0 opacity-50\" />\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t}\n\t\t\t\t\t</Button>\n\t\t\t\t</PopoverTrigger>\n\t\t\t\t<PopoverContent className={cn(\"p-0\", sidebarOpen && \"w-[var(--radix-popover-trigger-width)]\")} align=\"start\">\n\t\t\t\t\t<Command>\n\t\t\t\t\t\t<CommandInput placeholder=\"Search team...\" />\n\t\t\t\t\t\t<CommandList>\n\t\t\t\t\t\t\t<CommandEmpty>No teams found.</CommandEmpty>\n\t\t\t\t\t\t\t{teams.length > 0 && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{/* Personal Team */}\n\t\t\t\t\t\t\t\t\t<CommandGroup heading=\"Personal\">\n\t\t\t\t\t\t\t\t\t\t{teams\n\t\t\t\t\t\t\t\t\t\t\t.filter((t) => t.team.type === \"personal\")\n\t\t\t\t\t\t\t\t\t\t\t.map((team) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<CommandItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={team.team.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetActiveTeam(team);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetOpen(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoast({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: \"Team switched\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdescription: `Switched to ${team.team.name} team`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-sm\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar className=\"mr-2 h-5 w-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<AvatarImage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={getAvatarUrl(team.team.name, team.team.type)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={team.team.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<AvatarFallback>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team.team.name.charAt(0)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</AvatarFallback>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{team.team.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"ml-auto h-4 w-4\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactiveTeam?.team.id === team.team.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"opacity-100\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"opacity-0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t</CommandItem>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t</CommandGroup>\n\t\t\t\t\t\t\t\t\t{/* Other Teams */}\n\t\t\t\t\t\t\t\t\t{teams.filter((t) => t.team.type === \"workspace\").length > 0 && (\n\t\t\t\t\t\t\t\t\t\t<CommandGroup heading=\"Teams\">\n\t\t\t\t\t\t\t\t\t\t\t{teams\n\t\t\t\t\t\t\t\t\t\t\t\t.filter((t) => t.team.type === \"workspace\")\n\t\t\t\t\t\t\t\t\t\t\t\t.map((team) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t<CommandItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={team.team.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetActiveTeam(team);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetOpen(false);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoast({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle: \"Team switched\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdescription: `Switched to ${team.team.name} team`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-sm\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar className=\"mr-2 h-5 w-5\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<AvatarImage\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={getAvatarUrl(team.team.name, team.team.type)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\talt={team.team.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<AvatarFallback>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team.team.name.charAt(0)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</AvatarFallback>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{team.team.name}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CheckIcon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"ml-auto h-4 w-4\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tactiveTeam?.team.id === team.team.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"opacity-100\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"opacity-0\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</CommandItem>\n\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</CommandGroup>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<CommandSeparator />\n\t\t\t\t\t\t\t<CommandGroup>\n\t\t\t\t\t\t\t\t<CommandItem\n\t\t\t\t\t\t\t\t\tonSelect={() => {\n\t\t\t\t\t\t\t\t\t\tsetOpen(false);\n\t\t\t\t\t\t\t\t\t\tsetShowNewTeamDialog(true);\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tclassName=\"text-sm\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<PlusIcon className=\"mr-2 h-4 w-4\" />\n\t\t\t\t\t\t\t\t\tCreate Team\n\t\t\t\t\t\t\t\t</CommandItem>\n\t\t\t\t\t\t\t</CommandGroup>\n\t\t\t\t\t\t</CommandList>\n\t\t\t\t\t</Command>\n\t\t\t\t</PopoverContent>\n\t\t\t</Popover>\n\n\t\t\t<Dialog open={showNewTeamDialog} onOpenChange={setShowNewTeamDialog}>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<DialogHeader>\n\t\t\t\t\t\t<DialogTitle>Create team</DialogTitle>\n\t\t\t\t\t\t<DialogDescription>\n\t\t\t\t\t\t\tAdd a new team to manage projects and collaborate with others.\n\t\t\t\t\t\t</DialogDescription>\n\t\t\t\t\t</DialogHeader>\n\t\t\t\t\t<div className=\"space-y-4 py-2 pb-4\">\n\t\t\t\t\t\t<div className=\"space-y-2\">\n\t\t\t\t\t\t\t<Label htmlFor=\"name\">Team name</Label>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\tplaceholder=\"Acme Inc.\"\n\t\t\t\t\t\t\t\tvalue={newTeamName}\n\t\t\t\t\t\t\t\tonChange={(e) => setNewTeamName(e.target.value)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<DialogFooter>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\tonClick={() => setShowNewTeamDialog(false)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={handleCreateTeam}\n\t\t\t\t\t\t\tdisabled={!newTeamName || isLoading}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tContinue\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</DialogFooter>\n\t\t\t\t</DialogContent>\n\t\t\t</Dialog>\n\t\t</>\n\t);\n}\n",
      "type": "registry:block"
    }
  ],
  "meta": {
    "library": "lacy",
    "theme": "default"
  }
}